@mixin btn-variants($button) {
    $borderWidth: map-get($button, border-width);
    background: map-get($button, bg);
    border-color: map-get($button, border-color);
    border-width: $borderWidth;
    color: map-get($button, color);

    // Calculate padding based if variant's border-width is not equal to default border-width
    @if($borderWidth != $buttons-default-border-width) {
        $offsetBorders: 0;
        @if($borderWidth > $buttons-default-border-width) {
            $offsetBorders: map-get($button, border-width) - $buttons-default-border-width;
        } @else if($borderWidth < $buttons-default-border-width) {
            $offsetBorders: $buttons-default-border-width - map-get($button, border-width);
        }

        padding: ($buttons-padding-y - $offsetBorders) ($buttons-padding-x - $offsetBorders);

        // Size sm
        &.btn-sm {
            padding: ($buttons-sm-padding-y - $offsetBorders) ($buttons-sm-padding-x - $offsetBorders);
        }

        // Size lg
        &.btn-lg {
            padding: ($buttons-lg-padding-y - $offsetBorders) ($buttons-lg-padding-x - $offsetBorders);
        }
    }
    
    &:hover {
        background: map-get($button, hover-bg);
        border-color: map-get($button, hover-border-color);
        color: map-get($button, hover-color);
    }
    &:active {
        background: map-get($button, active-bg);
        color: map-get($button, active-color);
    }
    &:focus {
        background: map-get($button, focus-bg);
        color: map-get($button, focus-color);
    }
    &:disabled, &.disabled {
        background: map-get($button, disabled-bg);
        border-color: map-get($button, disabled-border-color);
        color: map-get($button, disabled-color);
    }
}

@mixin btn-sizes($padding-y, $padding-x, $font-size, $border-radius, $line-height) {
    border-radius: $border-radius;
    font-size: $font-size;
    line-height: $line-height;
    padding: $padding-y $padding-x;
}