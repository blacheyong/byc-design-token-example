@mixin btn-variants($button) {
    $borderWidth: map-get($button, border-width);
    background: map-get($button, bg);
    border-color: map-get($button, border-color);
    border-width: $borderWidth;
    color: map-get($button, color);

    // Calculate padding based if variant's border-width is not equal to default border-width
    @if ($borderWidth != null ) {
        @if($borderWidth != $buttons-default-border-width) {
            $offsetBorders: 0;
            @if($borderWidth > $buttons-default-border-width) {
                $offsetBorders: map-get($button, border-width) - $buttons-default-border-width;
            } @else if($borderWidth < $buttons-default-border-width) {
                $offsetBorders: $buttons-default-border-width - map-get($button, border-width);
            }

            padding: ($buttons-padding-y - $offsetBorders) ($buttons-padding-x - $offsetBorders);

            // Size sm
            &.btn-sm {
                padding: ($buttons-sm-padding-y - $offsetBorders) ($buttons-sm-padding-x - $offsetBorders);
            }

            // Size lg
            &.btn-lg {
                padding: ($buttons-lg-padding-y - $offsetBorders) ($buttons-lg-padding-x - $offsetBorders);
            }
        }
    }
    &:hover {
        background: map-get($button, hover-bg);
        border-color: map-get($button, hover-border-color);
        color: map-get($button, hover-color);
    }
    &:active {
        background: map-get($button, active-bg);
        color: map-get($button, active-color);
    }
    &:focus, &:focus-visible {
        background: map-get($button, focus-bg);
        color: map-get($button, focus-color);
        box-shadow: $buttons-drop-shadow-focus; // can't use map-get because token isn't from a variant
        outline: none;
    }
    &:disabled, &.disabled {
        background: map-get($button, disabled-bg);
        border-color: map-get($button, disabled-border);
        color: map-get($button, disabled-color);
    }

    &.btn-link {
        color: map-get($button, color);
        font-weight: map-get($button, font-weight);
        padding: map-get($button, padding-y) map-get($button, padding-x);
        text-decoration: map-get($button, text-decoration);
        &:hover {
            text-decoration: map-get($button, hover-text-decoration);
        }
    }

    &.btn-icon {
        align-items: center;
        display: inline-flex;
        svg {
            fill: map-get($button, icon-color);
        }
        &--icon-left {
            svg {
                margin-right: map-get($button, icon-gap);
            }
        }
        &--icon-right {
            svg {
                margin-left: map-get($button, icon-gap);
            }
        }
    }

    &.close-btn {
        align-items: center;
        background-color: map-get($button, bg);
        background-image: escape-svg(url("data:image/svg+xml,<svg width='13' height='13' viewBox='0 0 13 13' fill='none' xmlns='http://www.w3.org/2000/svg'><path fill-rule='evenodd' clip-rule='evenodd' d='M1.586 0.979221C1.28037 0.673593 0.784848 0.673593 0.479221 0.979221C0.173593 1.28485 0.173593 1.78037 0.479221 2.086L5.14322 6.75L0.479221 11.414C0.173593 11.7196 0.173593 12.2152 0.479221 12.5208C0.784848 12.8264 1.28037 12.8264 1.586 12.5208L6.25 7.85678L10.914 12.5208C11.2196 12.8264 11.7152 12.8264 12.0208 12.5208C12.3264 12.2152 12.3264 11.7196 12.0208 11.414L7.35678 6.75L12.0208 2.086C12.3264 1.78037 12.3264 1.28485 12.0208 0.979221C11.7152 0.673593 11.2196 0.673593 10.914 0.979221L6.25 5.64322L1.586 0.979221Z' fill='#{map-get($button, icon-color)}'/></svg>"));
        background-position: center center;
        background-repeat: no-repeat;
        border-radius: map-get($button, border-radius);
        border-width: map-get($button, border-width);
        box-sizing: content-box;
        height: map-get($button, height);
        display: flex;
        justify-content: center;
        padding: map-get($button, padding-y) map-get($button, padding-x);
        width: map-get($button, width);
        &:not(.disabled):not(:disabled) {
            cursor: pointer;
        }

        &:hover {
            background-image: escape-svg(url("data:image/svg+xml,<svg width='13' height='13' viewBox='0 0 13 13' fill='none' xmlns='http://www.w3.org/2000/svg'><path fill-rule='evenodd' clip-rule='evenodd' d='M1.586 0.979221C1.28037 0.673593 0.784848 0.673593 0.479221 0.979221C0.173593 1.28485 0.173593 1.78037 0.479221 2.086L5.14322 6.75L0.479221 11.414C0.173593 11.7196 0.173593 12.2152 0.479221 12.5208C0.784848 12.8264 1.28037 12.8264 1.586 12.5208L6.25 7.85678L10.914 12.5208C11.2196 12.8264 11.7152 12.8264 12.0208 12.5208C12.3264 12.2152 12.3264 11.7196 12.0208 11.414L7.35678 6.75L12.0208 2.086C12.3264 1.78037 12.3264 1.28485 12.0208 0.979221C11.7152 0.673593 11.2196 0.673593 10.914 0.979221L6.25 5.64322L1.586 0.979221Z' fill='#{map-get($button, hover-icon-color)}'/></svg>")) center center no-repeat;
        }
        &:disabled, &.disabled {
            background-image: escape-svg(url("data:image/svg+xml,<svg width='13' height='13' viewBox='0 0 13 13' fill='none' xmlns='http://www.w3.org/2000/svg'><path fill-rule='evenodd' clip-rule='evenodd' d='M1.586 0.979221C1.28037 0.673593 0.784848 0.673593 0.479221 0.979221C0.173593 1.28485 0.173593 1.78037 0.479221 2.086L5.14322 6.75L0.479221 11.414C0.173593 11.7196 0.173593 12.2152 0.479221 12.5208C0.784848 12.8264 1.28037 12.8264 1.586 12.5208L6.25 7.85678L10.914 12.5208C11.2196 12.8264 11.7152 12.8264 12.0208 12.5208C12.3264 12.2152 12.3264 11.7196 12.0208 11.414L7.35678 6.75L12.0208 2.086C12.3264 1.78037 12.3264 1.28485 12.0208 0.979221C11.7152 0.673593 11.2196 0.673593 10.914 0.979221L6.25 5.64322L1.586 0.979221Z' fill='#{map-get($button, disabled-icon-color)}'/></svg>")) center center no-repeat;
        }

        &--sm {
            height: map-get($button, height-sm);
            padding: map-get($button, padding-y-sm) map-get($button, padding-x-sm);
            width: map-get($button, width-sm);
        }
    }
}

@mixin btn-sizes($padding-y, $padding-x, $font-size, $border-radius, $line-height) {
    border-radius: $border-radius;
    font-size: $font-size;
    line-height: $line-height;
    padding: $padding-y $padding-x;
}